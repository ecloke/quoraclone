c
QuestionVote.where(vote_question: "Upvote").count
vote.question.count
QuestionVote.all
params
c
current_user.id
params
c
current_user.id
params
c
params
c
params
c
params
c
params
current_user.id
params[:user_id]
params
c
vote.count
params
c
params
c
params
c
params
c
params
c
params
c
 c
params[:vote]
c
questionvote.all
questionvote.count
questionvote = params[:Upvote]
params[:Upvote].count
params[:Upvote]
params
questionvote
c
params[:question_votes]
@questionvote(params[:question_votes])
@questionvote
value.count
@questionvote
@question.vote.count
Upvote.count
params
c
n
@question_vote.count
Upvote.count
params
c
params
c
params
parms
c
params
c
params
c
params
c
answer
answer[:user_id] = current_user.id
answer
c
question.subject
exit
c
question
question.subject
c
n
c
@question
n
Question.last
n
question[:user_id]
n
Question.create(subject: params[:subject])
params[:subject]
c
params
c
params[:subject]
params{:subject]
params
subject
c
logged_in?
exit
session[:user_id]
@user
c
@user.id
c
session[:user_id]
sessions[:user_id]
c
params[:user][:email]
params[:email]
params
c
@user
c
@user.id
c
@user.id
c
@user.id
c
@user.id
user.id
c
@error
c
@user
c
@user.id
@user
c
@user.id
c
@user.id
c
exit
c
params[:user][:email]
params[:user]
params[:email]
params
c
n
@user
c
@errors
c
@user.errors.full_messages
@user.errors
c
@errors
c
@user.errors.full_messages
@user.save
user.save
@user = User.new(params[:user])
c
@user = User.new(params[:user])
User.all
user
quit
@user.save
@user = User.new(params[:user])
c
@user = User.new(params[:user])
c
@user = User.new(params[:user])
c
@user = User.new(params[:user])
@user.save!
@user.password = params[:password]
@user = User.new(params[:user])
def create
@user.save!
@user.password = params[:password]
@user = User.new(params[:user])
def create
user
params
